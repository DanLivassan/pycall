Basic specification documentation / tests for pycall.


pycall is a flexible python library for creating and using Asterisk call files.
pycall provides python developers with a simple API that allows them to:

* Create Asterisk call files out of python objects.
* Perform error checking on call files before they are spooled.
* Spool call file objects with Asterisk immediately.
* Spool call file obejcts with Asterisk at a specific date and time.
* Use any call file attributes that Asterisk allows.
* Transparently perform all file operations.
* Perform all necessary permission checks and changes.
* Spool call files to local or mounted devices.
* Associate any additional `CallFile` attributes your `CallFile` needs (for
  pragmatic purposes) directly with your `CallFile` object.


The rest of this file contains doctest code to show how pycall works in a
simple way.


Make sure the `CallFile` class is available for usage:

>>> from pycall import CallFile


Make sure we can create a `CallFile` object:

>>> cf = CallFile('Local/18002223333@outgoing')


Make sure spooling a `CallFile` object with only the channel attribute fails:

>>> cf.spool() # doctest:+ELLIPSIS
Traceback (most recent call last):
	...
NoActionDefinedError: ...


Assign the `channel` attribute to our `CallFile` object, then try to spool it
again. We should see another exception.

>>> cf.channel = 'Local/18002223333@outgoing'
>>> cf.spool()	# doctest:+ELLIPSIS
Traceback (most recent call last):
NoActionDefinedError: "No `application` or `extension` specified."

Every call file must contain at least one valid action. Assign either an
`application` or `extension` attribute to your `CallFile` object.

Now let's try assigning an `application` attribute to our `CallFile` object,
then spooling it again.

>>> cf.application = 'Monitor'
>>> cf.spool()
True
