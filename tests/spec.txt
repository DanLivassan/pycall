
Basic specification documentation / tests for pycall.


pycall is a flexible python library for creating and using Asterisk call files.
pycall provides python developers with a powerful, but simple API which allows
them to:

* Create Asterisk call files out of python objects.
* Perform basic error checking on `CallFile` objects, to ensure that the call
  file you're spooling is legitimate.
* Write the call files objects to the disk in valid call file format.
* Spool call files with Asterisk so they are executed.
* Schedule your call files to be spooled by Asterisk at a specific date/time.
* Make use of any and all call file attributes / options, utilizing the full
  power of Asterisk call files.
* Fully handles all file operations, so you don't have to worry about any file
  access.
* Write call files to either local or remotely mounted devices.
* Associate any additional `CallFile` attributes your `CallFile` needs (for
  pragmatic purposes) directly with your `CallFile` object.

The rest of this file contains python doctest code to demonstrate and test
these basic functionalities. This is the initial testing code, which is helping
to drive the development and design of the pycall library. If you're interested
in seeing how pycall works on a high-level basis, you may also use the doctest
code below as self documentation, as it demonstrates basic pycall
functionalities.


Import dependencies and make sure that the `CallFile` class is available for
usage.

>>> from pycall import CallFile
>>> from datetime import datetime

Create an empty `CallFile` object.

>>> cf = CallFile()

Attempt to spool an empty `CallFile` object. We should see an exception.

>>> cf.spool()	# doctest:+ELLIPSIS
Traceback (most recent call last):
NoChannelDefinedError: "No `channel` attribute specified."

Every call file must have either the `channel` attribute or `trunk_type`,
`trunk_name`, and `number` attributes specified.

Assign the `channel` attribute to our `CallFile` object, then try to spool it
again. We should see another exception.

>>> cf.channel = 'Local/18002223333@outgoing'
>>> cf.spool()	# doctest:+ELLIPSIS
Traceback (most recent call last):
NoActionDefinedError: "No `application` or `extension` specified."

Every call file must contain at least one valid action. Assign either an
`application` or `extension` attribute to your `CallFile` object.

Now let's try assigning an `application` attribute to our `CallFile` object,
then spooling it again.

>>> cf.application = 'Monitor'
>>> cf.spool()
True
